apiVersion: apps/v1
kind: Deployment
metadata:
  name: exp-state
  labels:
    app.kubernetes.io/name: exp-state
    app.kubernetes.io/instance: exp-state
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: test-system
    app.kubernetes.io/managed-by: manual
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: exp-state
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 20%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: exp-state
        app.kubernetes.io/instance: exp-state
        app.kubernetes.io/version: "0.1.0"
        app.kubernetes.io/component: service
        app.kubernetes.io/part-of: test-system
        app.kubernetes.io/managed-by: manual
    spec:
      containers:
        - name: exp-state-container
          image: exp-state:0.1.1
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          startupProbe:
            httpGet:
              port: http # TODO: add management port
              path: /
            failureThreshold: 150
            periodSeconds: 2
          livenessProbe:
            httpGet:
              port: http # TODO: add management port
              path: /
            periodSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              port: http # TODO: add management port
              path: /
            periodSeconds: 10
            failureThreshold: 5
          env:
            - name: REDIS_HOST
              value: redis
            - name: REDIS_PORT
              value: "6379"
          resources:
            requests:
              cpu: 50m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 256Mi
